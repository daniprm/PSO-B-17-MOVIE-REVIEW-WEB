name: CI/CD Website Filminisme - PSO B - Kelompok 17

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  AZURE_WEBAPP_NAME_STAGING: ${{ secrets.AZURE_WEBAPP_NAME_STAGING }}
  AZURE_WEBAPP_NAME_PRODUCTION: ${{ secrets.AZURE_WEBAPP_NAME_PRODUCTION }}
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
  PRODUCTION_APP_URL: ${{secrets.PRODUCTION_APP_URL}}
  STAGING_APP_URL: ${{secrets.STAGING_APP_URL}}

jobs:
  lint_and_unit_test:
    name: Lint & Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout kode
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Cache dependensi
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependensi
        run: npm ci
      - name: Jalankan Lint
        run: npm run lint
      - name: Jalankan Unit Tests (jika ada)
        run: npm test # GANTI DENGAN PERINTAH TEST ANDA

  build_and_integration_test:
    name: Build Next.js App & Cypress Integration Tests
    runs-on: ubuntu-latest
    needs: lint_and_unit_test

    steps:
      - name: Checkout kode
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Cache dependensi
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependensi
        run: npm ci

      - name: Build Next.js App
        run: npm run build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

      - name: Jalankan Cypress Tests
        uses: cypress-io/github-action@v6
        with:
          start: npm start
          wait-on: 'http://localhost:3000'
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          CYPRESS_userEmail: ${{ secrets.CYPRESS_USER_EMAIL }}
          CYPRESS_userPassword: ${{ secrets.CYPRESS_USER_PASSWORD }}

      - name: Upload Artefak Build
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-build-output
          include-hidden-files: true
          path: |
            .next
            package.json
            package-lock.json
            next.config.mjs

  build_and_push_to_dockerhub:
    name: Build & Push Docker Image from Artifact
    runs-on: ubuntu-latest
    needs: build_and_integration_test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout kode
        uses: actions/checkout@v4

      - name: Download Artefak Build
        uses: actions/download-artifact@v4
        with:
          name: nextjs-build-output

      - name: Login ke Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build dan Push Docker Image menggunakan Artefak
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

  deploy_staging:
    name: Deploy & Smoke Test Staging
    runs-on: ubuntu-latest
    needs: build_and_push_to_dockerhub
    environment:
      name: staging
      url: ${{ env.STAGING_APP_URL }}

    steps:
      - name: Deploy ke Azure Web App Staging
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{env.AZURE_WEBAPP_NAME_PRODUCTION}}
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE_STAGING }}
          images: '${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}'
          slot-name: staging

      - name: Smoke Test Staging
        run: |
          echo "Menunggu 60 detik untuk aplikasi Staging siap..."
          sleep 60
          curl -f ${{ env.STAGING_APP_URL }}

  deploy_production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy_staging
    environment:
      name: production
      url: ${{ env.PRODUCTION_APP_URL }}

    steps:
      - name: Deploy ke Azure Web App Production menggunakan Publish Profile
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME_PRODUCTION }}
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE_PRODUCTION }}
          images: '${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}'
