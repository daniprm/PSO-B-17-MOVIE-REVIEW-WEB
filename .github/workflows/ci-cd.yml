name: Deploy PSO B - 17 - Filminisme

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  # AZURE_WEBAPP_NAME_STAGING: ${{ secrets.AZURE_WEBAPP_NAME_STAGING }}
  AZURE_WEBAPP_NAME_PRODUCTION: ${{ secrets.AZURE_WEBAPP_NAME_PRODUCTION }}
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
  PRODUCTION_APP_URL: ${{secrets.PRODUCTION_APP_URL}}

jobs:
  test:
    name: Lint & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout kode
        uses: actions/checkout@v4

      - name: Setup Node.js v20
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Cache dependensi
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependensi
        run: npm ci

      - name: Jalankan Lint
        run: npm run lint

      # - name: Jalankan Tests
      #   run: npm test # GANTI DENGAN PERINTAH TEST ANDA

  build_and_push_to_dockerhub:
    name: Build & Push Docker Image to Docker Hub
    runs-on: ubuntu-latest
    needs: test # Bergantung pada job 'test'

    # Hanya berjalan jika ada push ke branch 'main'
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout kode
        uses: actions/checkout@v4

      - name: Login ke Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build dan Push Docker Image ke Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          build-args: |
            NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
            NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

  # deploy_staging:
  #   name: Deploy & Smoke Test Staging
  #   runs-on: ubuntu-latest
  #   needs: build_and_push_to_dockerhub

  #   steps:
  #     # Tidak perlu login ke Azure dengan Service Principal
  #     # Login akan ditangani oleh Publish Profile

  #     - name: Deploy ke Azure Web App Staging menggunakan Publish Profile
  #       uses: azure/webapps-deploy@v3
  #       with:
  #         app-name: ${{ env.AZURE_WEBAPP_NAME_STAGING }}
  #         # Menggunakan Publish Profile untuk autentikasi
  #         publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE_STAGING }}
  #         # Image sekarang menunjuk ke Docker Hub
  #         images: '${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}'

  #     - name: Smoke Test Staging
  #       run: |
  #         echo "Menunggu 30 detik agar aplikasi Staging siap..."
  #         sleep 30
  #         curl -f ${{ secrets.STAGING_APP_URL }}

  deploy_production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build_and_push_to_dockerhub
    environment:
      name: production
      url: ${{ env.PRODUCTION_APP_URL }}

    steps:
      - name: Deploy ke Azure Web App Production menggunakan Publish Profile
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME_PRODUCTION }}
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE_PRODUCTION }}
          images: '${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}'
