name: Deploy Website Review Film

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  AZURE_WEBAPP_NAME_STAGING: ${{ secrets.AZURE_WEBAPP_NAME_STAGING }}
  AZURE_WEBAPP_NAME_PRODUCTION: ${{ secrets.AZURE_WEBAPP_NAME_PRODUCTION }}
  AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}

jobs:
  test:
    name: Lint & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout kode
        uses: actions/checkout@v4

      - name: Setup Node.js v20
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Cache dependensi
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependensi
        run: npm ci

      - name: Jalankan Lint
        run: npm run lint

      - name: Jalankan Tests
        run: npm test # Masih perlu disesuaikan

  build_and_push_docker:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: test # Bergantung pada job 'test'

    # Hanya berjalan jika ada push ke branch 'main'
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout kode
        uses: actions/checkout@v4

      - name: Login ke Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login ke Azure Container Registry (ACR)
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build dan Push Docker Image ke ACR
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest

  deploy_staging:
    name: Deploy & Smoke Test Staging
    runs-on: ubuntu-latest
    needs: build_and_push_docker

    steps:
      - name: Login ke Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy ke Azure Web App Staging
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME_STAGING }}
          images: ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Smoke Test Staging
        run: |
          echo "Menunggu 30 detik agar aplikasi Staging siap..."
          sleep 30
          curl -f ${{ secrets.STAGING_APP_URL }}

  deploy_production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy_staging
    environment:
      name: production
      url: ${{ secrets.PRODUCTION_APP_URL }}

    steps:
      - name: Login ke Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy ke Azure Web App Production
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME_PRODUCTION }}
          # Menggunakan image yang SAMA PERSIS dengan yang diuji di staging
          images: ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
